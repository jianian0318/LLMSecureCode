CWE-020-codeql_2.py
   CWE-502: Deserializing user-controlled data may allow attackers to execute arbitrary code.
CWE-020-codeql_4.py
   CWE-20: Security checks on the substrings of an unparsed URL are often vulnerable to bypassing.
   CWE-601: URL redirection based on unvalidated user input may cause redirection to malicious web sites.
CWE-022-author_2.py
   CWE-22: Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
CWE-022-codeql_2.py
   CWE-79: Extracting files from a malicious tar archive without validating that the destination file path is within the destination directory can cause files outside the destination directory to be overwritten.
CWE-078-author_1.py
   CWE-78: subprocess call with shell=True identified, security issue.
CWE-078-codeql_1.py
   CWE-78: subprocess call - check for execution of untrusted input.
   CWE-730: Using externally controlled strings in a command line may allow a malicious user to change the meaning of the command.
CWE-089-author_1.py
   CWE-798: Credentials are hard coded in the source code of the application.
CWE-089-codeql_1.py
   CWE-259: Possible hardcoded password: 'your_password'
   CWE-798: Credentials are hard coded in the source code of the application.
CWE-094-author_1.py
   CWE-78: Use of exec detected.
   CWE-94: Interpreting unsanitized user input as code allows a malicious user to perform arbitrary code execution.
CWE-116-codeql_1.py
   CWE-116: Matching HTML tags using regular expressions is hard to do right, and can easily lead to security issues.
CWE-327-codeql_4.py
   CWE-326: Using broken or weak cryptographic hashing algorithms can compromise security.
CWE-502-codeql_1.py
   CWE-502: Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
CWE-601-codeql_1.py
   CWE-601: URL redirection based on unvalidated user input may cause redirection to malicious web sites.
CWE-798-codeql_1.py
   CWE-259: Possible hardcoded password: 'password123'
   CWE-798: Credentials are hard coded in the source code of the application.
CWE-918-codeql_1.py
   CWE-918: Making a network request to a URL that is fully user-controlled allows for request forgery attacks.
CWE-918-codeql_2.py
   CWE-918: Making a network request to a URL that is partially user-controlled allows for request forgery attacks.
total: 16 vulnerable files, 21 vulnerabilities found