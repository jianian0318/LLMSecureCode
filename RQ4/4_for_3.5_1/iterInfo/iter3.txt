CWE-020-codeql_3.py
   CWE-601: URL redirection based on unvalidated user input may cause redirection to malicious web sites.
CWE-020-codeql_4.py
   CWE-94: A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.
   CWE-215: Running a Flask app in debug mode may allow an attacker to run arbitrary code through the Werkzeug debugger.
   CWE-601: URL redirection based on unvalidated user input may cause redirection to malicious web sites.
CWE-022-author_2.py
   CWE-22: Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
CWE-022-codeql_1.py
   CWE-643: Accessing paths influenced by users can allow an attacker to access unexpected resources.
CWE-078-author_1.py
   CWE-78: subprocess call - check for execution of untrusted input.
CWE-078-codeql_1.py
   CWE-78: subprocess call - check for execution of untrusted input.
   CWE-22: Leaking information about an exception, such as messages and stack traces, to an external user can expose implementation details that are useful to an attacker for developing a subsequent exploit.
CWE-094-author_1.py
   CWE-78: Use of exec detected.
   CWE-94: Interpreting unsanitized user input as code allows a malicious user to perform arbitrary code execution.
CWE-327-codeql_2.py
   CWE-327: Using an insecure SSL/TLS version may leave the connection vulnerable to attacks.
CWE-601-codeql_1.py
   CWE-601: URL redirection based on unvalidated user input may cause redirection to malicious web sites.
CWE-611-sonar_2.py
    no vulnerability found
CWE-798-codeql_1.py
    no vulnerability found
CWE-918-codeql_1.py
   CWE-918: Making a network request to a URL that is fully user-controlled allows for request forgery attacks.
total: 10 vulnerable files, 14 vulnerabilities found
