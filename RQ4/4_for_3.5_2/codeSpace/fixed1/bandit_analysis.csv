filename,test_name,test_id,issue_severity,issue_confidence,issue_cwe,issue_text,line_number,col_offset,end_col_offset,line_range,more_info
./codeSpace/fixed1\CWE-020-codeql_1.py,flask_debug_true,B201,HIGH,MEDIUM,https://cwe.mitre.org/data/definitions/94.html,"A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",16,4,23,[16],https://bandit.readthedocs.io/en/1.7.8/plugins/b201_flask_debug_true.html
./codeSpace/fixed1\CWE-020-codeql_2.py,flask_debug_true,B201,HIGH,MEDIUM,https://cwe.mitre.org/data/definitions/94.html,"A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",27,4,23,[27],https://bandit.readthedocs.io/en/1.7.8/plugins/b201_flask_debug_true.html
./codeSpace/fixed1\CWE-020-codeql_4.py,flask_debug_true,B201,HIGH,MEDIUM,https://cwe.mitre.org/data/definitions/94.html,"A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",27,4,23,[27],https://bandit.readthedocs.io/en/1.7.8/plugins/b201_flask_debug_true.html
./codeSpace/fixed1\CWE-022-author_2.py,blacklist,B310,MEDIUM,HIGH,https://cwe.mitre.org/data/definitions/22.html,Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.,16,15,35,[16],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_calls.html#b310-urllib-urlopen
./codeSpace/fixed1\CWE-022-codeql_2.py,hardcoded_tmp_directory,B108,MEDIUM,MEDIUM,https://cwe.mitre.org/data/definitions/377.html,Probable insecure usage of temp file/directory.,5,45,67,[5],https://bandit.readthedocs.io/en/1.7.8/plugins/b108_hardcoded_tmp_directory.html
./codeSpace/fixed1\CWE-078-author_1.py,blacklist,B404,LOW,HIGH,https://cwe.mitre.org/data/definitions/78.html,Consider possible security implications associated with the subprocess module.,1,0,17,[1],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_imports.html#b404-import-subprocess
./codeSpace/fixed1\CWE-078-author_1.py,subprocess_without_shell_equals_true,B603,LOW,HIGH,https://cwe.mitre.org/data/definitions/78.html,subprocess call - check for execution of untrusted input.,15,8,43,[15],https://bandit.readthedocs.io/en/1.7.8/plugins/b603_subprocess_without_shell_equals_true.html
./codeSpace/fixed1\CWE-078-codeql_1.py,blacklist,B404,LOW,HIGH,https://cwe.mitre.org/data/definitions/78.html,Consider possible security implications associated with the subprocess module.,2,0,17,[2],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_imports.html#b404-import-subprocess
./codeSpace/fixed1\CWE-078-codeql_1.py,subprocess_without_shell_equals_true,B603,LOW,HIGH,https://cwe.mitre.org/data/definitions/78.html,subprocess call - check for execution of untrusted input.,22,17,111,[22],https://bandit.readthedocs.io/en/1.7.8/plugins/b603_subprocess_without_shell_equals_true.html
./codeSpace/fixed1\CWE-078-codeql_1.py,flask_debug_true,B201,HIGH,MEDIUM,https://cwe.mitre.org/data/definitions/94.html,"A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",30,4,23,[30],https://bandit.readthedocs.io/en/1.7.8/plugins/b201_flask_debug_true.html
./codeSpace/fixed1\CWE-502-sonar_1.py,flask_debug_true,B201,HIGH,MEDIUM,https://cwe.mitre.org/data/definitions/94.html,"A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",22,4,50,[22],https://bandit.readthedocs.io/en/1.7.8/plugins/b201_flask_debug_true.html
./codeSpace/fixed1\CWE-502-sonar_1.py,hardcoded_bind_all_interfaces,B104,MEDIUM,MEDIUM,https://cwe.mitre.org/data/definitions/605.html,Possible binding to all interfaces.,22,29,38,[22],https://bandit.readthedocs.io/en/1.7.8/plugins/b104_hardcoded_bind_all_interfaces.html
./codeSpace/fixed1\CWE-611-author_1.py,hardcoded_password_string,B105,LOW,MEDIUM,https://cwe.mitre.org/data/definitions/259.html,Possible hardcoded password: 'admin',26,45,52,[26],https://bandit.readthedocs.io/en/1.7.8/plugins/b105_hardcoded_password_string.html
./codeSpace/fixed1\CWE-611-codeql_1.py,flask_debug_true,B201,HIGH,MEDIUM,https://cwe.mitre.org/data/definitions/94.html,"A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",23,4,23,[23],https://bandit.readthedocs.io/en/1.7.8/plugins/b201_flask_debug_true.html
./codeSpace/fixed1\CWE-611-sonar_3.py,blacklist,B410,LOW,HIGH,https://cwe.mitre.org/data/definitions/20.html,Using etree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace etree with the equivalent defusedxml package.,2,0,22,[2],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_imports.html#b410-import-lxml
./codeSpace/fixed1\CWE-730-codeql_1.py,flask_debug_true,B201,HIGH,MEDIUM,https://cwe.mitre.org/data/definitions/94.html,"A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",23,4,23,[23],https://bandit.readthedocs.io/en/1.7.8/plugins/b201_flask_debug_true.html
./codeSpace/fixed1\CWE-732-author_1.py,set_bad_file_permissions,B103,MEDIUM,HIGH,https://cwe.mitre.org/data/definitions/732.html,Chmod setting a permissive mask 0o755 on file (test.bim).,10,4,31,[10],https://bandit.readthedocs.io/en/1.7.8/plugins/b103_set_bad_file_permissions.html
./codeSpace/fixed1\CWE-776-codeql_1.py,blacklist,B405,LOW,HIGH,https://cwe.mitre.org/data/definitions/20.html,"Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",2,0,34,[2],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_imports.html#b405-import-xml-etree
./codeSpace/fixed1\CWE-776-codeql_1.py,blacklist,B314,MEDIUM,HIGH,https://cwe.mitre.org/data/definitions/20.html,Using xml.etree.ElementTree.XMLParser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.XMLParser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called,22,17,53,[22],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
./codeSpace/fixed1\CWE-776-codeql_1.py,blacklist,B314,MEDIUM,HIGH,https://cwe.mitre.org/data/definitions/20.html,Using xml.etree.ElementTree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.fromstring with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called,23,15,57,[23],https://bandit.readthedocs.io/en/1.7.8/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
./codeSpace/fixed1\CWE-918-codeql_1.py,flask_debug_true,B201,HIGH,MEDIUM,https://cwe.mitre.org/data/definitions/94.html,"A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",23,4,23,[23],https://bandit.readthedocs.io/en/1.7.8/plugins/b201_flask_debug_true.html
