CWE-020-codeql_1.py
    no vulnerability found
CWE-020-codeql_2.py
   CWE-79: Writing user input directly to a web page allows for a cross-site scripting vulnerability.
CWE-020-codeql_4.py
   CWE-601: URL redirection based on unvalidated user input may cause redirection to malicious web sites.
CWE-022-author_2.py
   CWE-22: Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
CWE-022-codeql_2.py
    no vulnerability found
CWE-078-author_1.py
   CWE-78: subprocess call - check for execution of untrusted input.
CWE-078-codeql_1.py
   CWE-78: subprocess call - check for execution of untrusted input.
   CWE-730: Using externally controlled strings in a command line may allow a malicious user to change the meaning of the command.
CWE-094-author_1.py
    no vulnerability found
CWE-327-codeql_2.py
    no vulnerability found
CWE-502-sonar_1.py
    no vulnerability found
CWE-601-codeql_1.py
   CWE-601: URL redirection based on unvalidated user input may cause redirection to malicious web sites.
CWE-601-sonar_2.py
   CWE-601: URL redirection based on unvalidated user input may cause redirection to malicious web sites.
CWE-611-author_1.py
    no vulnerability found
CWE-611-codeql_1.py
    no vulnerability found
CWE-611-sonar_3.py
   CWE-20: Using XSLT to parse untrusted XML data is known to be vulnerable to XML attacks. Replace XSLT with the equivalent defusedxml package.
CWE-730-codeql_1.py
    no vulnerability found
CWE-732-author_1.py
    no vulnerability found
CWE-776-codeql_1.py
   CWE-20: Parsing user input as an XML document with arbitrary internal entity expansion is vulnerable to denial-of-service attacks.
CWE-918-codeql_1.py
   CWE-117: Building log entries from user-controlled data is vulnerable to insertion of forged log entries by a malicious user.
   CWE-918: Making a network request to a URL that is fully user-controlled allows for request forgery attacks.
CWE-918-codeql_2.py
    no vulnerability found
total: 10 vulnerable files, 12 vulnerabilities found
